#!/bin/bash
#######################################################################
# build.config
#
# Part of the build_skel_ARM_Linux_QEMU_sdcard project.
# This is the configuration file; all config variables must go here.
# 
# !! IMP NOTE TO THE END-USER OF THIS PROJECT !!
# You are responsible for editing this configuration file, setting the 
# variables to sane values.
# To help you out, the place in the source below which has the config 
# variables that you MUST update have been marked with a comment line 
# as follows:
# # @@@@@
# So, you could just search for this string '@@@@@' (excluding the quotes of course),
# and make sure you update the following config variable(s) to the sane value 
# for your box.
# !!
#---
# Author: Kaiwan N Billimoria
# (C) kaiwanTECH
# Dec 2014.
#---
#######################################################################
#
# Using this Config file as generic for participants!
# For the QEMU-ARM project, we Expect that:
# - an x86-to-ARM toolchain is installed and working
# - a recent version of the Linux kernel source tree is available
# - a recent version of busybox source tree is available
#
##############

set -a   # auto export all vars

##################### UPDATE as required
# @@@@@
CONFIG_NAME_STR="Config file for my ... system"

# Toolchain
# the toolchain to use; expect that it is installed and the PATH is setup..
# @@@@@
export CXX=arm-none-linux-gnueabi-  # toolchain prefix 
# CXX_LOC is the location of the x86-to-ARM toolchain on disk.
# (used to setup the PATH and locate the ARM shared libraries within the toolchain)
# @@@@@
export CXX_LOC=/home/${USER}/Sourcery_2013.11.0.33_CodeBench_Lite_for_ARM_GNU_Linux/

# Toolchain in the PATH
export PATH=$PATH:${CXX_LOC}/bin ### UPDATE ### on your system!

###------###

export TOPDIR=$(pwd)

# Expect 
# @@@@@
export BB_FOLDER=${TOPDIR}/busybox-1.22.1

export ROOTFS=${TOPDIR}/rootfs
export IMAGES_FOLDER=${TOPDIR}/images
export IMAGES_BKP_FOLDER=${TOPDIR}/images_bkp
export CONFIGS_FOLDER=${TOPDIR}/configs


export WIPE_PARAMS_CHECKED=0

#####
# Select the ARM platform (to build the kernel for). Choices:
# a. ARM Versatile PB, cpu arch v5 (older --> ARM926EJ-S)
# b. ARM Versatile Express, cpu arch v7 (modern --> Cortex-A9)
##

# @@@@@
#export ARM_CPU_ARCH=v5   # if arch v5, build kernel for ARM VersatilePB 
                          # platform, kernel ver 3.1.5 (or 2.6.28.10)
export ARM_CPU_ARCH=v7    # if arch v7, build kernel for ARM Versatile 
                          # Express platform, kernel ver 3.10.24 (LTS kernel)

if [ ${ARM_CPU_ARCH} = "v5" ]; then
	export ARM_PLATFORM_STR="Versatile PB"
	export ARM_PLATFORM=versatile
	export ARM_PLATFORM_OPT=versatilepb

### UPDATE ### on your system!
# @@@@@
	export KERNEL_FOLDER=${TOPDIR}/linux-3.2.11
	export KERNELVER=3.1.5

elif [ ${ARM_CPU_ARCH} = "v7" ]; then
	export ARM_PLATFORM_STR="Versatile Express (A9)"
	export ARM_PLATFORM=vexpress
	export ARM_PLATFORM_OPT=vexpress-a9

### UPDATE ### on your system!
# @@@@@
	export KERNEL_FOLDER=~/3.10.24
	export KERNELVER=3.10.24

fi
#####

###
# Kernel and Busybox configuration:
# Say y/n. 
# !CAREFUL! If 'y' the kernel _will_ be rebuilt irrespective of changes
# Suggestion: keep it as 'y' the first time, then change to 'n' if you don't 
# want to rebuild the component..
export WIPE_PREV_KERNEL_CONFIG=-
export WIPE_PREV_BB_CONFIG=-      # y/n. CAREFUL! If 'y' BusyBox _will_ be rebuilt irrespective of changes
###

# Config vars for when we run QEMU:
# @@@@@
export KGDB_MODE=0  # make '1' to have qemu run w/ the '-S' switch (waits for gdb to 'connect')
export SMP_EMU_MODE=0  # make '1' to have qemu run w/ 2 emulated cores (only applicable on the Versatile Express C-A9 platform)"

